{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","Map.js","Fact.js","App.js","serviceWorker.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","console","log","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","sortedData","sort","b","prettyPrintStat","stat","Map","center","zoom","TileLayer","url","attribution","Circle","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","TabPanel","children","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","palette","background","paper","width","borderRadius","Fact","classes","useTheme","React","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","aria-label","Tab","fontWeight","axis","direction","onChangeIndex","dir","fontSize","App","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","getCountriesData","onCountryChange","e","countryCode","target","FormControl","Select","MenuItem","todayCases","todayRecovered","todayDeaths","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05a2cdb1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./InfoBox.css\";\n\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\n  console.log(title, active);\n  return (\n    <Card\n      onClick={props.onClick}\n      className={`infoBox ${active && \"infoBox--selected\"} ${\n        isRed && \"infoBox--red\"\n      }`}\n    >\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\n          {cases}\n        </h2>\n\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n          {total} Total\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default InfoBox;\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nconst buildChartData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChartData(data, casesType);\n          setData(chartData);\n          console.log(chartData);\n          // buildChart(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table\">\n      {countries.map((country) => (\n        <tr>\n          <td>{country.country}</td>\n          <td>\n            <strong>{numeral(country.cases).format(\"0,0\")}</strong>\n          </td>\n        </tr>\n      ))}\n    </div>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n","import React from \"react\";\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport \"./Map.css\";\nimport { showDataOnMap } from \"./util\";\n\nfunction Map({ countries, casesType, center, zoom }) {\n  return (\n    <div className=\"map\">\n      <LeafletMap center={center} zoom={zoom}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {showDataOnMap(countries, casesType)}\n      </LeafletMap>\n    </div>\n  );\n}\n\nexport default Map;\n","import React from \"react\";\r\nimport \"./Fact.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: 1100,\r\n    borderRadius: 15,\r\n  },\r\n}));\r\n\r\nfunction Fact() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n  return (\r\n    <div className=\"pokam\">\r\n      <div className=\"neu pp container\">\r\n        <div className=\"tab-rad\">\r\n          <div className={classes.root}>\r\n            <div className=\"colors\">\r\n              <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"fullWidth\"\r\n                  aria-label=\"full width tabs example\"\r\n                >\r\n                  <Tab\r\n                    style={{ color: \"#8E44AD\", fontWeight: 600 }}\r\n                    label=\"Kids Corner\"\r\n                    {...a11yProps(0)}\r\n                  />\r\n                  <Tab\r\n                    style={{ color: \"#8E44AD\", fontWeight: 600 }}\r\n                    label=\"Youth Power\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    style={{ color: \"#8E44AD\", fontWeight: 600 }}\r\n                    label=\"Aged\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                </Tabs>\r\n              </AppBar>\r\n              <SwipeableViews\r\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n              >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                  <div style={{ fontSize: 20 }}>\r\n                    The virus that causes COVID-19 is mainly <br /> transmitted\r\n                    through droplets generated when an infected <br />\r\n                    person coughs, sneezes, or exhales. These droplets are too\r\n                    heavy <br />\r\n                    to hang in the air, and quickly <br />\r\n                    fall on floors or surfaces. You can be <br />\r\n                    infected by breathing in the virus <br />\r\n                    if you are within close proximity of someone who <br />\r\n                    has COVID-19, or by touching a contaminated surface <br />\r\n                    and then your eyes, nose or mouth.\r\n                  </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                  <div style={{ fontSize: 20 }}>\r\n                    The virus that causes COVID-19 is mainly <br /> transmitted\r\n                    through droplets generated when an infected <br />\r\n                    person coughs, sneezes, or exhales. These droplets are too\r\n                    heavy <br />\r\n                    to hang in the air, and quickly <br />\r\n                    fall on floors or surfaces. You can be <br />\r\n                    infected by breathing in the virus <br />\r\n                    if you are within close proximity of someone who <br />\r\n                    has COVID-19, or by touching a contaminated surface <br />\r\n                    and then your eyes, nose or mouth.\r\n                  </div>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                  <div style={{ fontSize: 20 }}>\r\n                    The virus that causes COVID-19 is mainly <br /> transmitted\r\n                    through droplets generated when an infected <br />\r\n                    person coughs, sneezes, or exhales. These droplets are too\r\n                    heavy <br />\r\n                    to hang in the air, and quickly <br />\r\n                    fall on floors or surfaces. You can be <br />\r\n                    infected by breathing in the virus <br />\r\n                    if you are within close proximity of someone who <br />\r\n                    has COVID-19, or by touching a contaminated surface <br />\r\n                    and then your eyes, nose or mouth.\r\n                  </div>\r\n                </TabPanel>\r\n              </SwipeableViews>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fact;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport Fact from \"./Fact\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div>\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl> \n        </div>\n         <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div> \n        <div className=\"container\">\n        <Map\n        className=\"neumorf\"\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n        </div>\n\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n             <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} /> \n          </div>\n        </CardContent>\n      </Card>\n      \n    </div>\n    <div className=\"health\">\n      <h1>Mental Health Section</h1>\n      </div>\n        <Fact/>\n    </div>\n\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}